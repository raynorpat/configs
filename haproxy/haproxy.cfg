global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

    # this sets the max size of the temporary DHE keys that get generated for SSL
    tune.ssl.default-dh-param 2048

    # this sets the max amnt of connections to haproxy
    maxconn 20480

    tune.bufsize 65536
    tune.pipesize 262144

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

defaults tcp
    maxconn 1024
    mode tcp
    balance leastconn

    timeout client 120s
    timeout connect 10s
    timeout tunnel 10m
    timeout tarpit 30s

    log global
    option tcplog

#
# frontends
#

# main https frontend for SSL passthrough
frontend main-frontend
    mode http
    bind :80
    bind :443 ssl crt /etc/haproxy/raynornet.xyz.pem

    # http redirect to https
    http-request redirect scheme https code 301 unless { ssl_fc }

    # bitwarden backend
    acl host-vaultwarden hdr(host) -i vault.raynornet.xyz
    use_backend vaultwarden-backend-http if host-vaultwarden !{ path_beg /notifications/hub } or { path_beg /notifications/hub/negotiate }
    use_backend vaultwarden-backend-ws if host-vaultwarden { path_beg /notifications/hub } !{ path_beg /notifications/hub/negotiate }

    # tactical rmm backend
	acl raynor_rmm hdr(host) -i rmm.raynornet.xyz
    acl raynor_rmm_api hdr(host) -i api.raynornet.xyz
    acl raynor_rmm_mesh hdr(host) -i mesh.raynornet.xyz
    use_backend tactical-rmm if raynor_rmm
    use_backend tactical-rmm if raynor_rmm_api
    use_backend tactical-rmm if raynor_rmm_mesh

    # screenconnect backend
    acl raynor_screenconnect hdr(host) -i remote.raynornet.xyz
    use_backend screenconnect-backend if raynor_screenconnect

	# gitea backend
	acl raynor_gitea hdr(host) -i code.raynornet.xyz
	use_backend gitea-backend if raynor_gitea

	# drone.ci backend
	acl raynor_drone hdr(host) -i ci.raynornet.xyz
	use_backend drone-web-backend if raynor_drone

    # default redirect to raynorpat.com
    default_backend dead-backend

#
# listeners
#
listen screenconnect-relay
    bind :8041
    mode tcp
    timeout connect 4000
    timeout client 180000
    timeout server 180000
    server raynornet-sc-vm 10.1.0.5:8041

listen tacticalrmm-agent-relay
    bind :4222
    mode tcp
    timeout connect 4000
    timeout client 180000
    timeout server 180000
    server raynornet-rmm 10.1.0.10:4222

#
# backends
#

# ScreenConnect backend
backend screenconnect-backend
    mode http
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server raynornet-sc-vm 10.1.0.5:8040 check

# Bitwarden (thru vaultwarden) backend
backend vaultwarden-backend-http
    mode http
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server raynornet-vaultwarden 10.1.0.8:80 check
backend vaultwarden-backend-ws
    mode http
    server raynornet-vaultwarden 10.1.0.8:3012

# Tactical RMM backend
backend tactical-rmm
    mode http
    option http-keep-alive
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-check expect string 200\ OK
    server raynornet-rmm 10.1.0.10:443 ssl verify none maxconn 1000 weight 10 check

# Gitea backend
backend gitea-backend
	mode http
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server raynornet-gitea 10.1.0.7:3000 check

# Drone ci backend
backend drone-web-backend
	mode http
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server raynornet-droneci 10.1.0.4:80 check

# Default backend
backend dead-backend
	mode http
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server raynor 10.1.0.11:443 check
